#!/bin/python3


from twilio.rest import Client
import time
import os
import sys
import subprocess
import re


# list of all trusted IPs on your network except your Phone
known_IPs = ['Home_Device_IP_here', 'Home_Device_IP_here', 'Home_Device_IP_here',
 'Home_Device_IP_here', 'Home_Device_IP_here', 'Home_Device_IP_here'] 

# address list of all devices that have connected while program is running, leave empty
new_IPs = []
# list of devices that are currently connected, leave empty
active_IPs = []

# variables for peoples devices
your_PHONE_IP = ''
print('type your ip address with last .xxx removed "10.0.0" ')
ipaddress_cut = os.popen('read ipaddress ; echo $ipaddress')
name1 = 'ip-here'
name2 = 'ip-here'
name3 = 'ip-here'

# list of variable of known devices
known_devices = [your_PHONE_IP, name1, name2, name3] # changed

counter = 0
tag = False
def check_status(device_name, ip_address, active_IPs, IP, date):
    global tag
    global counter
    #----------------------------
    if device_name == name1:
        name = 'name1_here'
    elif device_name == name2:
        name = 'name2_here'
    elif device_name == your_PHONE:
        name = 'Access Point Device Manager is online'
    elif device_name == name3:
        name = 'name3_here'
    #add names here
    else:
        write_to_file("Error: in check_status(device_name), device_name issue, unsure of 'device_name == ?'.")
    #----------------------------
    if device_name in active_IPs:
        if tag == False:
            tag = True
            write_to_file(name + " " + device_name + " connected to your Access Point")
            # place for sending message to phone
            send_message(name + " connected to your Access Point")
    if device_name in active_IPs:
        if device_name not in ip_address:
            if not counter >= 1000: # 50 iterations = 1 minute, 3000 = 1 hour
                counter += 1
                MainLoop()
            if counter >= 1000:
                tag = False
                counter = 0
                active_IPs.remove(device_name)
                write_to_file(device_name + " has not been active for 20 mins " + str(date))
                write_to_file(IP)

##########################################################################

def MainLoop():
    Main_counter = 0
    switch = False
    while True:
        os.system('time.sleep(10)')
        IP = os.popen('ipscan ' + ipaddress + ' ' + '40').read()
        IP = str(IP)
        date = os.popen('date').read()
        ip_address = re.findall(r'[0-9]{1,3}\.){3}[0-9]{1,3}', IP)
        for i in ip_address:
            if i not in known_IPs:
                if i not in new_IPs:
                        new_IPs.append(i)
                        write_to_file(str(i) + " has been added to new IPs " + str(new_IPs))

                if i not in active_IPs:
                    active_IPs.append(i)
                    write_to_file("Active IPs " + str(active_IPs) + " " + str(date))

                if i in new_IPs:
                    if i not in known_devices:
                        if i in active_IPs:
                            if switch == False:
                                switch = True
                                write_to_file(str(i) + " is an unknown device! it has been added to new_IPs" + str(date))
                                send_message(str(i) + " is an  unknown device! it has connected to your Access Point")
                                write_to_file(IP)

                        if i not in active_IPs:
                            switch = False

            if i in known_devices:
                check_status(i, ip_address, active_IPs, IP, date)

            if i in active_IPs:
                if i not in known_devices:
                    if i not in ip_address:
                        Main_count += 1
                        if Main_counter != 50:
                            MainLoop()
                        else:
                            Main_counter = 0
                            active_IPs.remove(i)
                            write_to_file(str(i) + " has been removed from active MACs")
                            write_to_file(active_MACs)
#---------------------------------------------------------------------------

            if i not in known_IPs and i not in known_devices:
                write_to_file("an unknown device has connected to your network" + str(i) + " " + str(date))
                write_to_file(mac)


#----------------------------------------------------------------------------

#----------------------------------------------------------------------------
# twilio
def send_message(text_message):
    account_number = 'account_number_here'
    token = 'Token_number_here'
    twilio_number = 'Twilio_number_here'
    my_phone = 'your_phone_number_here'
    client = Client(account_number, token)
    client.messages.create(to=my_phone, from_=twilio_number, body=text_message)

MainLoop()


